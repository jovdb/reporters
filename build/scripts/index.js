function reporters(e,r){reporters.logDebug("Get reporter '"+e+"'.");var t=reporters.getInputCreator(e);if(!t)throw new Error("No reporter with name '"+e+"' available. Available reporters: "+reporters.getAvailable().join(", "));return reporters.wrapReporter(e,t,r)}var fs=require("fs"),path=require("path"),sourceMapResolve=require("source-map-resolve"),sm=require("source-map"),SourceMapConsumer=sm.SourceMapConsumer,stripBom=require("strip-bom"),reporters;!function(e){function r(){for(var r=[],t=0;t<arguments.length;t++)r[t-0]=arguments[t];e.debug&&console.log.apply(console,r)}function t(e,r){var t="../scripts/"+e+"/"+r+".js";return fs.existsSync(__dirname+"/"+t)?require("./"+t):null}function o(e){var r=[];return fs.readdirSync(__dirname+"/"+e).forEach(function(e){".js"===path.extname(e)&&r.push(e.substring(0,e.length-path.extname(e).length))}),r}function n(){return o("input")}function i(e){return t("input",e)}function a(e){return t("output",e)}function u(r,t){var o=a(r);if(!o)throw new Error("No output with name '"+r+"' available. Available outputs: "+e.getOutputs().join(", "));return o(t)}function s(){return o("output")}function l(e){return e}function f(t,o,n){if(r("Creating reporter '"+t+"', options: "+JSON.stringify(n)),o){var i=function(t){r("Extracted messages: ",t),t&&e.report(t)},a=o(i,n);return a}}function p(e,t){function o(e,o){e&&e.filePath&&(r(e.filePath+": added sourcemap to cache"),t[e.filePath]=o)}function n(e){return e&&e.filePath?(void 0!==t[e.filePath]&&r(e.filePath+": found sourcemap in cache"),t[e.filePath]):null}if(void 0===t&&(t={}),e&&(!e.options||e.options&&e.options.sourceMaps!==!1)){var i=n(e);if(void 0!==i)return i;var a;if(e.getFile){r(e.filePath+": a vinyl file is available in message!");var u=e.getFile();if(u&&u.sourceMap)return r(e.filePath+": sourceMap found in vinyl file"),o(e,u.sourceMap),u.sourceMap;if(r(e.filePath+": no .sourceMap in vinyl file (gulp-sourcemaps)"),u&&u.contents){r(e.filePath+": sourcemap comments in contents of vinyl file?");var s=sourceMapResolve.resolveSync(u.contents.toString("utf8"),e.filePath,fs.readFileSync);if(s)return r(e.filePath+": sourcemap found in contents of vinyl file!"),o(e,s.map),s.map;r(e.filePath+": no sourcemap found in contents of vinyl file!")}else r(e.filePath+": no .contents in vinyl file, are you sure that you passed a vinyl file?");a||r(e.filePath+": no sourcemap found in vinyl file.")}else r(e.filePath+": no vinyl file available in message (getFile method)");if(!a)try{r(e.filePath+": reading file");var l=fs.readFileSync(e.filePath);if(a=l.toString()){if(r(e.filePath+": resolving sourcemap"),s=sourceMapResolve.resolveSync(a,e.filePath,fs.readFileSync))return r(e.filePath+": sourcemap found!"),o(e,s.map),s.map;r(e.filePath+": sourcemap not found.")}}catch(f){r(e.filePath+": error reading: "+f.message)}try{var p=e.filePath+".map";r(p+": reading file (if exists)");var c=JSON.parse(stripBom(fs.readFileSync(p,"utf8")));if(c)return o(e,c),c;r(p+": Original location not found.")}catch(f){r(p+": error reading: "+f.message)}}else r(e.filePath+": sourcemaps disabled by options");return o(e,null),null}function c(t){if(t){var o={},n=[];if("function"==typeof e.output)n=[e.output];else{if(!Array.isArray(e.output))throw new Error("reporters.output needs a function or array of functions to report messages.");if(e.output.some(function(e){return"function"!=typeof e}))throw new Error("reporters.output needs a function or array of functions to report messages.");n=e.output}t.forEach(function(e){if(!e.options||e.options.sourceMaps!==!1){r(e.filePath+": checking for sourcemaps...");var t=p(e,o);if(t){r(e.filePath+": get original location of line "+e.lineNbr+", col "+e.colNbr);var n=new SourceMapConsumer(t),i=n.originalPositionFor({line:e.lineNbr-1,column:e.colNbr-1});r(e.filePath+": original location result: "+JSON.stringify(i)),i&&i.source?(r(e.filePath+": updating message with sourcemap location"),e.filePath=i.source,e.lineNbr=i.line+1,e.colNbr=i.column+1):r("line & column not found in sourceMap")}}}),e.filterOrUpdate&&(r("Filtering messages: filterOrUpdate"),t=e.filterOrUpdate(t)),r("# Outputs: "+n.length),n.forEach(function(e){e(t)})}}e.debug=!1,e.output=[a("vs-console")()],e.logDebug=r,e.getAvailable=n,e.getInputCreator=i,e.getOutput=u,e.getOutputs=s,e.filterOrUpdate=l,e.wrapReporter=f,e.report=c}(reporters||(reporters={})),module.exports=reporters;